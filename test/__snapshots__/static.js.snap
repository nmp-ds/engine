// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`static rules do static things 1`] = `
"/* layer: default */
.visible{visibility:visible;}
.invisible{visibility:hidden;}
.backface-visible{backface-visibility:visible;}
.backface-hidden{backface-visibility:hidden;}
.backface-inherit{backface-visibility:inherit;}
.backface-initial{backface-visibility:initial;}
.backface-revert{backface-visibility:revert;}
.backface-revert-layer{backface-visibility:revert-layer;}
.backface-unset{backface-visibility:unset;}
.cursor-auto{cursor:auto;}
.cursor-default{cursor:default;}
.cursor-none{cursor:none;}
.cursor-context-menu{cursor:context-menu;}
.cursor-help{cursor:help;}
.cursor-pointer{cursor:pointer;}
.cursor-progress{cursor:progress;}
.cursor-wait{cursor:wait;}
.cursor-cell{cursor:cell;}
.cursor-crosshair{cursor:crosshair;}
.cursor-text{cursor:text;}
.cursor-vertical-text{cursor:vertical-text;}
.cursor-alias{cursor:alias;}
.cursor-copy{cursor:copy;}
.cursor-move{cursor:move;}
.cursor-no-drop{cursor:no-drop;}
.cursor-not-allowed{cursor:not-allowed;}
.cursor-grab{cursor:grab;}
.cursor-grabbing{cursor:grabbing;}
.cursor-all-scroll{cursor:all-scroll;}
.cursor-col-resize{cursor:col-resize;}
.cursor-row-resize{cursor:row-resize;}
.cursor-n-resize{cursor:n-resize;}
.cursor-e-resize{cursor:e-resize;}
.cursor-s-resize{cursor:s-resize;}
.cursor-w-resize{cursor:w-resize;}
.cursor-ne-resize{cursor:ne-resize;}
.cursor-nw-resize{cursor:nw-resize;}
.cursor-se-resize{cursor:se-resize;}
.cursor-sw-resize{cursor:sw-resize;}
.cursor-ew-resize{cursor:ew-resize;}
.cursor-ns-resize{cursor:ns-resize;}
.cursor-nesw-resize{cursor:nesw-resize;}
.cursor-nwse-resize{cursor:nwse-resize;}
.cursor-zoom-in{cursor:zoom-in;}
.cursor-zoom-out{cursor:zoom-out;}
.pointer-events-auto{pointer-events:auto;}
.pointer-events-none{pointer-events:none;}
.pointer-events-inherit{pointer-events:inherit;}
.pointer-events-initial{pointer-events:initial;}
.pointer-events-revert{pointer-events:revert;}
.pointer-events-revert-layer{pointer-events:revert-layer;}
.pointer-events-unset{pointer-events:unset;}
.resize-x{resize:horizontal;}
.resize-y{resize:vertical;}
.resize{resize:both;}
.resize-none{resize:none;}
.resize-inherit{resize:inherit;}
.resize-initial{resize:initial;}
.resize-revert{resize:revert;}
.resize-revert-layer{resize:revert-layer;}
.resize-unset{resize:unset;}
.select-auto{user-select:auto;}
.select-all{user-select:all;}
.select-text{user-select:text;}
.select-none{user-select:none;}
.select-inherit{user-select:inherit;}
.select-initial{user-select:initial;}
.select-revert{user-select:revert;}
.select-revert-layer{user-select:revert-layer;}
.select-unset{user-select:unset;}
.content-empty,
.content-none{content:\\"\\";}
.break-normal{overflow-wrap:normal;word-break:normal;}
.break-words{overflow-wrap:break-word;}
.break-all{word-break:break-all;}
.break-keep{word-break:keep-all;}
.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}
.text-ellipsis{text-overflow:ellipsis;}
.text-clip{text-overflow:clip;}
.uppercase{text-transform:uppercase;}
.lowercase{text-transform:lowercase;}
.capitalize{text-transform:capitalize;}
.normal-case{text-transform:none;}
.italic{font-style:italic;}
.not-italic{font-style:normal;}
.font-bold{font-weight:700;}
.font-normal{font-weight:400;}
.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-smoothing:grayscale;}
.subpixel-antialiased{-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;font-smoothing:auto;}
.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0;}
.not-sr-only{position:static;width:auto;height:auto;padding:0;margin:0;overflow:visible;clip:auto;white-space:normal;}
.isolate{isolation:isolate;}
.isolation-auto{isolation:auto;}
.object-cover{object-fit:cover;}
.object-contain{object-fit:contain;}
.object-fill{object-fit:fill;}
.object-scale-down{object-fit:scale-down;}
.object-none{object-fit:none;}
.bg-blend-multiply{background-blend-mode:multiply;}
.bg-blend-screen{background-blend-mode:screen;}
.bg-blend-overlay{background-blend-mode:overlay;}
.bg-blend-darken{background-blend-mode:darken;}
.bg-blend-lighten{background-blend-mode:lighten;}
.bg-blend-color-dodge{background-blend-mode:color-dodge;}
.bg-blend-color-burn{background-blend-mode:color-burn;}
.bg-blend-hard-light{background-blend-mode:hard-light;}
.bg-blend-soft-light{background-blend-mode:soft-light;}
.bg-blend-difference{background-blend-mode:difference;}
.bg-blend-exclusion{background-blend-mode:exclusion;}
.bg-blend-hue{background-blend-mode:hue;}
.bg-blend-saturation{background-blend-mode:saturation;}
.bg-blend-color{background-blend-mode:color;}
.bg-blend-luminosity{background-blend-mode:luminosity;}
.bg-blend-normal{background-blend-mode:normal;}
.bg-blend-inherit{background-blend:inherit;}
.bg-blend-initial{background-blend:initial;}
.bg-blend-revert{background-blend:revert;}
.bg-blend-revert-layer{background-blend:revert-layer;}
.bg-blend-unset{background-blend:unset;}
.mix-blend-multiply{mix-blend-mode:multiply;}
.mix-blend-screen{mix-blend-mode:screen;}
.mix-blend-overlay{mix-blend-mode:overlay;}
.mix-blend-darken{mix-blend-mode:darken;}
.mix-blend-lighten{mix-blend-mode:lighten;}
.mix-blend-color-dodge{mix-blend-mode:color-dodge;}
.mix-blend-color-burn{mix-blend-mode:color-burn;}
.mix-blend-hard-light{mix-blend-mode:hard-light;}
.mix-blend-soft-light{mix-blend-mode:soft-light;}
.mix-blend-difference{mix-blend-mode:difference;}
.mix-blend-exclusion{mix-blend-mode:exclusion;}
.mix-blend-hue{mix-blend-mode:hue;}
.mix-blend-saturation{mix-blend-mode:saturation;}
.mix-blend-color{mix-blend-mode:color;}
.mix-blend-luminosity{mix-blend-mode:luminosity;}
.mix-blend-plus-lighter{mix-blend-mode:plus-lighter;}
.mix-blend-normal{mix-blend-mode:normal;}
.mix-blend-inherit{mix-blend:inherit;}
.mix-blend-initial{mix-blend:initial;}
.mix-blend-revert{mix-blend:revert;}
.mix-blend-revert-layer{mix-blend:revert-layer;}
.mix-blend-unset{mix-blend:unset;}"
`;

exports[`static rules for object position > supports all predefined values in the position map 1`] = `
"/* layer: default */
.object-b,
.object-bottom{object-position:bottom;}
.object-bc,
.object-bottom-center{object-position:bottom center;}
.object-bl,
.object-bottom-left{object-position:bottom left;}
.object-bottom-right,
.object-br{object-position:bottom right;}
.object-c,
.object-center{object-position:center;}
.object-cb,
.object-center-bottom{object-position:center bottom;}
.object-cc,
.object-center-center{object-position:center center;}
.object-center-left,
.object-cl{object-position:center left;}
.object-center-right,
.object-cr{object-position:center right;}
.object-center-top,
.object-ct{object-position:center top;}
.object-l,
.object-left{object-position:left;}
.object-lb,
.object-left-bottom{object-position:left bottom;}
.object-lc,
.object-left-center{object-position:left center;}
.object-left-top,
.object-lt{object-position:left top;}
.object-r,
.object-right{object-position:right;}
.object-rb,
.object-right-bottom{object-position:right bottom;}
.object-rc,
.object-right-center{object-position:right center;}
.object-right-top,
.object-rt{object-position:right top;}
.object-t,
.object-top{object-position:top;}
.object-tc,
.object-top-center{object-position:top center;}
.object-tl,
.object-top-left{object-position:top left;}
.object-top-right,
.object-tr{object-position:top right;}"
`;
